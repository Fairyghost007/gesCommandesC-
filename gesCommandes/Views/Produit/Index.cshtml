@model IEnumerable<gesCommandes.Models.Produit>
@using gesCommandes.Enums;
@using System.Security.Claims;
@using Microsoft.AspNetCore.Identity;

@{
    Layout = "_Layout";
    var client = ViewData["Client"] as Client ?? new Client { user = new User { Nom = "Unknown" } };
    var currentUser = (ClaimsPrincipal)User;
}

<div style="height: calc(100vh - 100px);" class="container mx-auto p-4 rounded-lg overflow-scroll">
    <div class="">
        <div class="flex justify-between items-center mb-4 bg-yellow-50 p-4 rounded-lg gap-6 z-20">
            <div class="flex items-center w-full mr-10 gap-2">
                <label for="" class="font-bold text-base">Libelle:</label>
                <input type="text" placeholder="Search by libelle..."
                       class="px-3 py-2 border border-green-500 rounded-md w-full focus:outline-none focus:ring-2 focus:ring-green-500" />
            </div>
            <div class="w-40 flex items-center justify-end">
                <a href="@Url.Action("Create")"
                   class="px-4 py-2 w-full bg-green-600 text-center text-white rounded-md hover:bg-green-500 transition duration-300">Create New</a>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="text-center text-xl font-bold text-greenMe mt-4">
            No products available.
        </div>
    }
    else
    {
        <div class="grid grid-cols-4 md:grid-cols-1 lg:grid-cols-4 gap-6">
            @foreach (var item in Model)
            {
                <div class="card bg-yellow-50 rounded-xl p-4 shadow-lg">
                    <div class="bg-greenMe p-4 rounded-xl h-48 flex justify-center items-center relative">
                        <div class="top-0 left-0 bg-green-600 absolute p-3 rounded-md">
                            <p class="text-center text-white">
                                @Html.DisplayFor(modelItem => item.QteStock)
                            </p>
                        </div>
                        <div class="w-full h-full rounded-xl text-white text-center flex justify-center items-center">
                            <img src="@(item.ImgPath != null ? item.ImgPath : "/imgs/default.png")" alt="No image Here"
                                 class="object-cover w-full h-full rounded-xl">
                        </div>
                    </div>
                    <div class="productTitle text-center text-xl font-bold text-greenMe mt-4">
                        @Html.DisplayFor(modelItem => item.Libelle)
                    </div>
                    <div class="flex flex-col items-center mt-4 p-0">
                        @if (currentUser.FindFirstValue(ClaimTypes.Role) == Role.CLIENT.ToString())
                        {
                            <form action="@Url.Action("AddToPanier", "Client")" method="POST" class="w-full border-t border-green-600">
                                <input type="hidden" name="clientId" value="@client.Id" />
                                <input type="hidden" name="qteCommande" value="1" />
                                <input type="hidden" name="produitId" value="@item.Id" />
                                <div class="flex flex-row items-center justify-between rounded-t-full mt-2">
                                    <div class="flex items-center justify-start text-center text-greenMe mt-2 text-lg font-bold w-full">
                                        <div>
                                            <svg xmlns="http://www.w3.org/2000/svg" data-name="Calque 1" viewBox="0 0 128 160"
                                                 x="0px" y="0px" class="w-7 h-7" xmlns="http://www.w3.org/2000/svg"
                                                 data-name="Calque 1" viewBox="0 0 128 160">
                                                <path
                                                    d="M96.9,35.49c-1-.85-14.19.12-14.19.12-2.1.41-2.18-.61-2.16-1a1.88,1.88,0,0,0-.16-.7S77.25,15.12,63.06,14.27c0,0-10-.45-19,9.56,0,0-6.22,6.92-7.49,9.77a3.08,3.08,0,0,1-2,1.2s-12.69,5-14.43,6.29-1.21,2.75-1.21,2.75a8.07,8.07,0,0,0,6.74,7.79s1.31.47,5.41-4.1l5-4.69S40,54.35,40.59,54.91s1.13,1.28,4.09.94,6.62-2.63,6.89-6c0,0,.31-.74-1.45-2.45,0,0-8.16-9.9-8.37-10.12s-.59-.67.17-1.61,8.26-12.61,18-13.4c0,0,5.73-.72,6.79,6.24,0,0-2.83-.95-3.62-.48S61.74,29,62,31.14l0,3.49a.51.51,0,0,0,0,.09c0,.38-.16,1.28-2.16.89,0,0-13.23-1-14.19-.12s-.71,1.16.17,2.33L58.92,55.05a5.89,5.89,0,0,0-2.37,5.76c.63,3.79,5.11,4.35,5.11,4.35s1.79-.43,1.91.86,1.2,5.52,1.14,6.28.21,1-1.65,1.26-12.2.92-13,4.15l13,.47a4.75,4.75,0,0,1,2.84,3l.34,4.43a.83.83,0,0,1-.81,1.17l-1.19.06s-7.34.4-8.64,4l9.12.28s2,.61,2.08,2.07.07,3.77.07,3.77,0,.68-1.32.68-6.32,1.14-6.72,4c0,0,6.89.08,7,.13a2.2,2.2,0,0,1,1.48,1.92,4,4,0,0,1-.27,2.57c-.14.18-.64.89-.64.89s-.83,1.71-.26,2.53c.88,1,3,1.5,5.11,1.45s4.22-.43,5.1-1.45c.57-.82-.26-2.53-.26-2.53s-.5-.71-.64-.89a4,4,0,0,1-.27-2.57,2.2,2.2,0,0,1,1.48-1.92c.16-.05,7.05-.13,7.05-.13-.4-2.88-5.42-4-6.72-4S75.72,97,75.72,97s0-2.31.07-3.77,2.08-2.07,2.08-2.07L87,90.92c-1.3-3.64-8.64-4-8.64-4l-1.19-.06a.83.83,0,0,1-.81-1.17l.34-4.43a4.77,4.77,0,0,1,2.84-3l13-.47c-.83-3.23-11.17-3.87-13-4.15s-1.59-.5-1.65-1.26,1-5,1.15-6.28,1.91-.86,1.91-.86,4.47-.56,5.1-4.35a5.88,5.88,0,0,0-2.36-5.76l13-17.23C97.61,36.65,97.85,36.34,96.9,35.49ZM58.33,60.86A2.67,2.67,0,0,1,60,57.47l1.74,5A2.67,2.67,0,0,1,58.33,60.86Zm26.06,0A2.67,2.67,0,0,1,81,62.51l1.75-5A2.65,2.65,0,0,1,84.39,60.86Z" />
                                        </svg>
                                    </div>
                                    <div>
                                        @Html.DisplayFor(modelItem => item.Prix)
                                    </div>
                                </div>
                                <button type="submit"
                                        class="mt-2 px-4 py-2 w-full bg-green-600 text-white rounded-md hover:bg-green-500 transition duration-300">
                                    Add to Cart
                                </button>
                            </div>
                        </form>
                        }

                        @if (currentUser.FindFirstValue(ClaimTypes.Role) == Role.RS.ToString())
                        {
                            <div class="border-t pt-2 space-x-2 flex flex-row justify-between items-center w-full">
                                <a href="@Url.Action("Edit", new { id = item.Id })"
                                   class="text-white hover:underline bg-green-600 p-2 rounded-md w-full text-center">Edit</a>
                                <a href="@Url.Action("Delete", new { id = item.Id })"
                                   class="text-white hover:underline bg-green-700 p-2 rounded-md w-full text-center">Delete</a>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    }
</div>
